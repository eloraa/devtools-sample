/* Automatically generated by package @eloraa/font-loader */
@font-face {
  font-family: '__font_1aa547cc380b23df';
  font-weight: 500;
  src: url(./c5858a103e3c49dc.woff2) format('woff2');
  font-display: swap;
}

@font-face {
  font-family: '__font_Fallback_1aa547cc380b23df';
  src: local('Arial');
  ascent-override: 69.97%;
  descent-override: 16.73%;
  line-gap-override: 7.61%;
  size-adjust: 131.49%;
}

.__className_1aa547cc380b23df {
  font-family: '__font_1aa547cc380b23df', '__font_Fallback_1aa547cc380b23df';
}

@font-face {
  font-family: '__font_87066c267be4191c';
  src: url(./78fbf46b185b5219.woff2) format('woff2');
  font-display: swap;
}

@font-face {
  font-family: '__font_Fallback_87066c267be4191c';
  src: local('Arial');
  ascent-override: 94.23%;
  descent-override: 27.2%;
  line-gap-override: 12.14%;
  size-adjust: 102.94%;
}

.__className_87066c267be4191c {
  font-family: '__font_87066c267be4191c', '__font_Fallback_87066c267be4191c';
}

:root {
  font-family: '__font_87066c267be4191c', '__font_Fallback_87066c267be4191c';
  font-weight: 400;

  --primary: 186 100% 33%;
  --background: 0 0% 10%;
  --foreground: 0 0% 100%;

  color: hsl(var(--foreground));
  background-color: hsl(var(--primary));

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

::selection {
  background-color: hsl(var(--background) / 0.5);
  color: hsl(var(--foreground));
}

::-webkit-scrollbar {
  width: 4px;
  height: 4px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background: hsl(var(--foreground) / 0.5);
  border-radius: 10px;
}

::-webkit-scrollbar-thumb:hover {
  background: hsl(var(--foreground));
}

a {
  font-weight: 500;
  color: hsl(var(--foreground));
  text-decoration: inherit;
}
a:hover {
  color: hsl(var(--foreground));
}

html,
body {
  height: 100%;
  overflow: hidden;
}

body {
  margin: 0;
  display: flex;
  justify-content: space-between;
  flex-direction: column;
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  line-height: 1.1;
}

img,
svg {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

button,
input {
  border: none;
  background: none;
  cursor: pointer;
  outline: none;
  color: inherit;
  font-family: inherit;
}

header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0.475rem 0;
  text-transform: uppercase;
}
header > * {
  width: 5rem;
  font-size: 0.775rem;
}

header h1 {
  text-align: center;
  font-weight: 600;
}

header a {
  text-align: right;
  font-weight: 400;
}
header a span:hover {
  border-bottom: 1px dotted hsl(var(--foreground));
}

main {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
}

main figure {
  width: 100%;
  max-width: 100px;
  margin: 0 auto;
}

main figure .hello {
  transition: filter 500ms ease;
  filter: hue-rotate(var(--hueRotate, 0deg));
}

main h1 {
  font-size: 1.45rem;
}

main p {
  font-size: 0.875rem;
  margin-top: 0.45rem;
}

main .code {
  background: #111;
  padding: 0.45rem;
  font-size: 0.875rem;
  position: relative;
  width: 100%;
  max-width: 400px;
  margin-top: 1rem;
  display: flex;
  align-items: center;
}
main .code input {
  width: 100%;
  font-family: '__font_1aa547cc380b23df', '__font_Fallback_1aa547cc380b23df';
  padding-right: 1.5rem;
}

main .code input::-webkit-scrollbar {
  height: 0;
  width: 0;
}

main .code input:focus {
  box-shadow: 0 0 0 1px hsl(var(--primary));
}

main .code input::selection {
  background-color: hsl(var(--primary) / 0.5);
  color: hsl(var(--foreground));
}

main .code button {
  position: absolute;
  color: hsl(var(--foreground));
  background: hsl(var(--primary) / 0.5);
  padding: 2px;
  height: 1rem;
  width: 1rem;
  right: 0.5rem;
}
main .code button span {
  display: block;
}
main .code button .check-icon {
  display: none;
}
main .code button.copied .check-icon {
  display: block;
}
main .code button.copied .copy-icon {
  display: none;
}
main .info {
  text-align: center;
  font-weight: 500;
}

main .info span {
  display: inline-block;
  width: 1rem;
  height: 1rem;
}
main .info span svg {
  vertical-align: bottom;
}
main .info button {
  font-weight: 500;
  border-bottom: 1px dotted transparent;
}
main .info button {
  border-bottom: 1px dotted hsl(var(--foreground));
}
main .info button:hover {
  border-bottom-style: solid;
}

footer {
  display: flex;
  align-items: flex-end;
  justify-content: space-between;
  padding: 0.475rem 0;
  font-size: 0.775rem;
}

footer h1 {
  text-transform: uppercase;
}

.colors {
  display: flex;
  gap: 0.5rem;
  margin-top: 1rem;
}

.color {
  border: 1px solid hsl(var(--foreground));
  width: 1.25rem;
  height: 1.25rem;
  border-radius: 9999px;
  cursor: pointer;
}

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: -1;
}

.tests {
  position: fixed;
  bottom: 1rem;
  left: 0;
  right: 0;
  background: hsl(var(--foreground));
  color: hsl(var(--background));
  padding: 1rem;
  box-shadow: 0 0 0 1px hsl(var(--primary));
  max-width: 520px;
  margin-left: auto;
  margin-right: auto;
  opacity: 0;
  pointer-events: none;
}

.tests h1 {
  font-size: 1.25rem;
  font-weight: 500;
  margin-bottom: 0.5rem;
}

.tests button {
  flex: 1;
  white-space: nowrap;
}

.tests > div {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.tests button {
  padding: 0.35rem 1rem;
  font-weight: 500;
  font-size: 0.875rem;
  font-weight: 600;
  background: hsl(var(--primary));
  color: hsl(var(--foreground));
}

.container {
  padding-left: 1rem;
  padding-right: 1rem;
}

@media (min-width: 768px) {
  .container {
    padding-left: 2rem;
    padding-right: 2rem;
  }
}

.animate-in {
  animation-name: enter;
  animation-duration: 0.15s;
  animation-timing-function: ease-out;
}

.animate-out {
  animation-name: exit;
  animation-duration: 0.15s;
  animation-timing-function: ease-in;
}

@keyframes enter {
  0% {
    transform: translate3d(0, 0, 0) scale3d(1, 1, 1) rotate(0);
  }
}
@keyframes exit {
  to {
    transform: translate3d(0, 0, 0) scale3d(1, 1, 1) rotate(0);
  }
}
